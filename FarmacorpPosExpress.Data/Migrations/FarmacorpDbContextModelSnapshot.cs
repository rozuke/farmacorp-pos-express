// <auto-generated />
using System;
using FarmacorpPosExpress.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FarmacorpPosExpress.Data.Migrations
{
    [DbContext(typeof(FarmacorpDbContext))]
    partial class FarmacorpDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FarmacorpPosExpress.Models.ERP.BarCode", b =>
                {
                    b.Property<int>("BarCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BarCodeId"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<int>("ExpProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpProductProductId")
                        .HasColumnType("int");

                    b.Property<string>("UniqueCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UniqueCodigo");

                    b.HasKey("BarCodeId");

                    b.HasIndex("ExpProductId");

                    b.HasIndex("ExpProductProductId")
                        .IsUnique()
                        .HasFilter("[ExpProductProductId] IS NOT NULL");

                    b.ToTable("CodigosBarras", (string)null);

                    b.HasData(
                        new
                        {
                            BarCodeId = 1,
                            Active = true,
                            ExpProductId = 1,
                            UniqueCode = "123456"
                        },
                        new
                        {
                            BarCodeId = 2,
                            Active = true,
                            ExpProductId = 2,
                            UniqueCode = "789012"
                        });
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.ERP.ErpProduct", b =>
                {
                    b.Property<int>("ErpProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErpProductId"));

                    b.Property<double>("Cost")
                        .HasColumnType("float")
                        .HasColumnName("Costo");

                    b.Property<int>("ExpProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 21, 0, 7, 57, 736, DateTimeKind.Local).AddTicks(1127));

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UniqueCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UniqueCodigo");

                    b.HasKey("ErpProductId");

                    b.HasIndex("ExpProductId");

                    b.ToTable("ErpProductos", (string)null);

                    b.HasData(
                        new
                        {
                            ErpProductId = 1,
                            Cost = 10.5,
                            ExpProductId = 1,
                            RegistrationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 100,
                            UniqueCode = "ERP001"
                        },
                        new
                        {
                            ErpProductId = 2,
                            Cost = 15.75,
                            ExpProductId = 2,
                            RegistrationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 150,
                            UniqueCode = "ERP002"
                        });
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.Express.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Activo");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descripcion");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("IdCategoriaPadre");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Active = true,
                            Description = "Categoría A"
                        },
                        new
                        {
                            CategoryId = 2,
                            Active = true,
                            Description = "Categoría B",
                            ParentCategoryId = 1
                        });
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.Express.ExpProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Activo");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaVencimiento");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Observaciones");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Precio");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductTypeId1")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("ProductTypeId1");

                    b.ToTable("ExpProducto", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Active = true,
                            ExpirationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Producto 1",
                            Observations = "Producto bueno",
                            Price = 20.0,
                            ProductTypeId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            Active = true,
                            ExpirationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Producto 2",
                            Observations = "Producto bueno",
                            Price = 30.0,
                            ProductTypeId = 2
                        });
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.Express.ExpressSale", b =>
                {
                    b.Property<int>("ExpressSaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpressSaleId"));

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cliente");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<double>("Discount")
                        .HasColumnType("float")
                        .HasColumnName("Descuento");

                    b.Property<int>("ExpProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpProductProductId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Precio");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Cantidad");

                    b.Property<double>("Total")
                        .HasColumnType("float")
                        .HasColumnName("Total");

                    b.Property<string>("UniqueProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UniqueProducto");

                    b.HasKey("ExpressSaleId");

                    b.HasIndex("ExpProductId");

                    b.HasIndex("ExpProductProductId");

                    b.ToTable("VentaExpress", (string)null);

                    b.HasData(
                        new
                        {
                            ExpressSaleId = 1,
                            Client = "Cliente 1",
                            Date = new DateTime(2023, 11, 21, 0, 7, 57, 740, DateTimeKind.Local).AddTicks(1928),
                            Discount = 0.0,
                            ExpProductId = 1,
                            Price = 15.0,
                            Quantity = 5,
                            Total = 75.0,
                            UniqueProduct = "123456"
                        },
                        new
                        {
                            ExpressSaleId = 2,
                            Client = "Cliente 2",
                            Date = new DateTime(2023, 11, 21, 0, 7, 57, 740, DateTimeKind.Local).AddTicks(1934),
                            Discount = 0.0,
                            ExpProductId = 2,
                            Price = 25.0,
                            Quantity = 10,
                            Total = 250.0,
                            UniqueProduct = "789012"
                        });
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.Express.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCategoryId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 21, 0, 7, 57, 739, DateTimeKind.Local).AddTicks(8379));

                    b.Property<int>("ExpProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductCategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ExpProductId");

                    b.ToTable("ProductosCategorias", (string)null);
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.Express.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTypeId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descripcion");

                    b.HasKey("ProductTypeId");

                    b.ToTable("TiposProducto", (string)null);

                    b.HasData(
                        new
                        {
                            ProductTypeId = 1,
                            Description = "Tipo 1"
                        },
                        new
                        {
                            ProductTypeId = 2,
                            Description = "Tipo 2"
                        });
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.ERP.BarCode", b =>
                {
                    b.HasOne("FarmacorpPosExpress.Models.Express.ExpProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ExpProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmacorpPosExpress.Models.Express.ExpProduct", null)
                        .WithOne("BarCode")
                        .HasForeignKey("FarmacorpPosExpress.Models.ERP.BarCode", "ExpProductProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.ERP.ErpProduct", b =>
                {
                    b.HasOne("FarmacorpPosExpress.Models.Express.ExpProduct", "ExpProduct")
                        .WithMany("ErpProducts")
                        .HasForeignKey("ExpProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpProduct");
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.Express.Category", b =>
                {
                    b.HasOne("FarmacorpPosExpress.Models.Express.Category", "ParentCategory")
                        .WithMany("ParentCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.Express.ExpProduct", b =>
                {
                    b.HasOne("FarmacorpPosExpress.Models.Express.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmacorpPosExpress.Models.Express.ProductType", null)
                        .WithMany("ExpProducts")
                        .HasForeignKey("ProductTypeId1");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.Express.ExpressSale", b =>
                {
                    b.HasOne("FarmacorpPosExpress.Models.Express.ExpProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ExpProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmacorpPosExpress.Models.Express.ExpProduct", null)
                        .WithMany("ExpressSales")
                        .HasForeignKey("ExpProductProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.Express.ProductCategory", b =>
                {
                    b.HasOne("FarmacorpPosExpress.Models.Express.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmacorpPosExpress.Models.Express.ExpProduct", "Product")
                        .WithMany("ProductsCategories")
                        .HasForeignKey("ExpProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.Express.Category", b =>
                {
                    b.Navigation("ParentCategories");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.Express.ExpProduct", b =>
                {
                    b.Navigation("BarCode")
                        .IsRequired();

                    b.Navigation("ErpProducts");

                    b.Navigation("ExpressSales");

                    b.Navigation("ProductsCategories");
                });

            modelBuilder.Entity("FarmacorpPosExpress.Models.Express.ProductType", b =>
                {
                    b.Navigation("ExpProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
